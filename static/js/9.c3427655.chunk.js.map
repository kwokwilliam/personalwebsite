{"version":3,"sources":["assets/blogposts lazy /^/.*/.md$/ groupOptions: {} namespace object","components/CodeBlock.js","components/Blog.js"],"names":["map","./123.md","./info330-1.md","./info330-2.md","webpackAsyncContext","req","ids","__webpack_require__","e","then","id","t","Promise","resolve","Error","code","keys","Object","module","exports","CodeBlock","_this$props","this","props","language","value","react_default","a","createElement","react_syntax_highlighter_default","style","showLineNumbers","React","PureComponent","defaultProps","About","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","blogString","sessionStorage","getItem","setItem","cookies","get","firebase","database","ref","push","timestamp","ServerValue","TIMESTAMP","_this2","concat","post","d","fetch","text","setState","catch","console","log","renderError","error","backgroundColor","borderRadius","padding","lib","fluid","Fade_default","clear","when","react_markdown_default","source","renderers","className","Component"],"mappings":"mGAAA,IAAAA,EAAA,CACAC,WAAA,CACA,IACA,IAEAC,iBAAA,CACA,IACA,IAEAC,iBAAA,CACA,IACA,KAGA,SAAAC,EAAAC,GACA,IAAAC,EAAAN,EAAAK,GACA,OAAAC,EAOAC,EAAAC,EAAAF,EAAA,IAAAG,KAAA,WACA,IAAAC,EAAAJ,EAAA,GACA,OAAAC,EAAAI,EAAAD,EAAA,KARAE,QAAAC,UAAAJ,KAAA,WACA,IAAAD,EAAA,IAAAM,MAAA,uBAAAT,EAAA,KAEA,MADAG,EAAAO,KAAA,mBACAP,IAQAJ,EAAAY,KAAA,WACA,OAAAC,OAAAD,KAAAhB,IAEAI,EAAAM,GAAA,IACAQ,EAAAC,QAAAf,yNCxBqBgB,mLAUR,IAAAC,EACuBC,KAAKC,MAAzBC,EADHH,EACGG,SAAUC,EADbJ,EACaI,MAElB,OACIC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAmBH,SAAUA,EACzBM,MAAOA,SACPC,iBAAe,GACdN,UAjBsBO,IAAMC,eAAxBb,EAMVc,aAAe,CAClBV,SAAU,uDCLGW,cACjB,SAAAA,IAAc,IAAAC,EAOV,GAPUnB,OAAAoB,EAAA,EAAApB,CAAAK,KAAAa,IACVC,EAAAnB,OAAAqB,EAAA,EAAArB,CAAAK,KAAAL,OAAAsB,EAAA,EAAAtB,CAAAkB,GAAAK,KAAAlB,QAEKmB,MAAQ,CACTC,WAAY,KAGXC,eAAeC,QAAQ,eAAgB,CACxCD,eAAeE,QAAQ,eAAe,GACtC,IAAInC,EAAKoC,IAAQC,IAAI,MACrBC,IAASC,WAAWC,IAAI,iBAAiBC,KAAK,CAC1CC,UAAWJ,IAASC,SAASI,YAAYC,UACzC5C,OAZE,OAAA0B,oFAmBO,IAAAmB,EAAAjC,KAOjBf,EAAA,IAAAA,CAAO,KAAAiD,OAAuBlC,KAAKC,MAAMkC,KAAzC,QAAoDhD,KAAK,SAAAiD,GAAC,OACtDC,MAAMD,GACDjD,KAAK,SAAAD,GAAC,OAAIA,EAAEoD,SACZnD,KAAK,SAAAiC,GACFa,EAAKM,SAAS,CAAEnB,mBAE1BoB,MAAM,SAAAtD,GACJuD,QAAQC,IAAIxD,GACZ+C,EAAKU,YAAY,qFAIbC,GACR5C,KAAKuC,SAAS,CACVK,2CAKJ,OAAOxC,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CACfqC,gBAAiB,QACjBC,aAAc,GACdC,QAAS,KACV3C,EAAAC,EAAAC,cAAC0C,EAAA,KAAD,CAAMC,OAAK,GACLjD,KAAKmB,MAAMyB,OACRxC,EAAAC,EAAAC,cAAA,SAAIN,KAAKmB,MAAMyB,OAElB5C,KAAKmB,MAAMC,YACRhB,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAM8C,OAAK,EAACC,KAAgC,KAA1BpD,KAAKmB,MAAMC,YAAmBhB,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CAAeiD,OAAQtD,KAAKmB,MAAMC,WAC9EmC,UAAW,CACP9D,KAAMK,GAEV0D,UAAW,mBA3DAC","file":"static/js/9.c3427655.chunk.js","sourcesContent":["var map = {\n\t\"./123.md\": [\n\t\t685,\n\t\t10\n\t],\n\t\"./info330-1.md\": [\n\t\t686,\n\t\t11\n\t],\n\t\"./info330-2.md\": [\n\t\t687,\n\t\t12\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 684;\nmodule.exports = webpackAsyncContext;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { vs2015 as style } from 'react-syntax-highlighter/styles/hljs'\r\n\r\n/**\r\n * CodeBlock sourced from https://gist.github.com/ibrahima/d21950a95aee3212e991a8404e238093\r\n */\r\nexport default class CodeBlock extends React.PureComponent {\r\n    static propTypes = {\r\n        value: PropTypes.string.isRequired,\r\n        language: PropTypes.string,\r\n    }\r\n\r\n    static defaultProps = {\r\n        language: null,\r\n    }\r\n\r\n    render() {\r\n        const { language, value } = this.props;\r\n\r\n        return (\r\n            <SyntaxHighlighter language={language}\r\n                style={style}\r\n                showLineNumbers>\r\n                {value}\r\n            </SyntaxHighlighter>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Fade from 'react-reveal/Fade';\r\nimport { Grid } from 'react-flexbox-grid';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport cookies from 'browser-cookies';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport CodeBlock from './CodeBlock';\r\nimport './Blog.css';\r\n\r\nexport default class About extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            blogString: \"\"\r\n        }\r\n\r\n        if (!sessionStorage.getItem(\"blogVisited\")) {\r\n            sessionStorage.setItem(\"blogVisited\", true);\r\n            let id = cookies.get('id');\r\n            firebase.database().ref('/blogPageView').push({\r\n                timestamp: firebase.database.ServerValue.TIMESTAMP,\r\n                id\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        // console.log(this.props.post);\r\n\r\n        // IGNORE THIS JANK \r\n        // I first dynamically import it in order to get the markdown file path,\r\n        // then I fetch it based on that dynamic path. This is important for code\r\n        // splitting.\r\n        import(`../assets/blogposts/${this.props.post}.md`).then(d =>\r\n            fetch(d)\r\n                .then(e => e.text())\r\n                .then(blogString => {\r\n                    this.setState({ blogString });\r\n                })\r\n        ).catch(e => {\r\n            console.log(e);\r\n            this.renderError(\"Blog not found, please refresh or try again\");\r\n        })\r\n    }\r\n\r\n    renderError(error) {\r\n        this.setState({\r\n            error\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <div style={{\r\n            backgroundColor: 'white',\r\n            borderRadius: 20,\r\n            padding: 30\r\n        }}><Grid fluid>\r\n                {this.state.error &&\r\n                    <p>{this.state.error}</p>\r\n                }\r\n                {this.state.blogString &&\r\n                    <Fade clear when={this.state.blogString !== \"\"}><ReactMarkdown source={this.state.blogString}\r\n                        renderers={{\r\n                            code: CodeBlock,\r\n                        }}\r\n                        className={'wkmd'} />\r\n                    </Fade>\r\n                }\r\n            </Grid >\r\n        </div>\r\n    }\r\n}\r\n"],"sourceRoot":""}