{"version":3,"sources":["components/Pages/TutorQ/Components/StudentLocation/StudentLocation.js","components/Pages/TutorQ/Components/StudentLocation/Assets/TELabMap.png","components/Pages/TutorQ/Student/Components/TutorQButtons/TutorQButtons.js","components/Pages/TutorQ/Student/Components/TutorQDropdown/TutorQDropdown.js","components/Pages/TutorQ/Student/TutorQStudent.js"],"names":["StudentLocation","_ref","locations","setLocation","student","_useState","useState","x","y","width","height","parentNodeOffsetLeft","parentNodeOffsetTop","_useState2","Object","D_Files_JobRelated_personalwebsite_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","imgData","setImgData","imgRef","useRef","imgWrapRef","useEffect","resize","current","_imgRef$current","offsetLeft","offsetTop","parentNode","_imgRef$current2","window","addEventListener","removeEventListener","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","ref","style","position","alt","src","TELabMap","maxHeight","maxWidth","cursor","onClick","e","_e$target","target","locationObj","xPercentage","pageX","yPercentage","pageY","map","d","i","key","left","top","transform","display","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","icon","faCircle","size","color","module","exports","__webpack_require__","p","TutorQButtons","getPageNumber","prevStep","nextStep","totalPages","react_default","margin","marginTop","textAlign","zIndex","lib","fluid","reactstrap_es","disabled","backgroundColor","TutorQDropdown","name","data","change","initText","value","slicedToArray","dropdownOpen","setDropdownOpen","isOpen","toggle","caret","onChange","console","log","removeUserFromQueue","firebase","functions","httpsCallable","TutorQStudent","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","removeMeFromQueue","setState","removeButtonLoading","id","then","r","page","success","error","renderAnnouncements","announcementsObj","announcementsSeen","cookies","get","JSON","parse","announcements","objectSpread","forEach","currDateTime","Date","now","keys","timestamp","alert","body","push","set","stringify","componentDidMount","idToQueueInfoRef","database","concat","on","snap","queueKey","val","userInQueueKey","announcementRef","queueRef","queue","queueArr","sort","b","userInQueue","indexOf","state","inQueue","queueLength","length","positionInQueue","sentToFirebase","componentWillUnmount","off","_this$setState","classNumber","defineProperty","checkValidityBeforeSendingToFirebase","location","setValid","valid","sendDataToFirebase","_this$state","problemCategory","problemDescription","toString","ServerValue","TIMESTAMP","setError","message","Number","classes","topics","201","330","340","_this$state2","Fragment","fontWeight","fontSize","Link","to","Fade_default","placeholder","TutorQDropdown_TutorQDropdown","test","TutorQButtons_TutorQButtons","Component"],"mappings":"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","file":"static/js/12.ec97582a.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport TELabMap from './Assets/TELabMap.png'\r\n\r\nexport default function StudentLocation({ locations, setLocation, student }) {\r\n    const [imgData, setImgData] = useState({ x: 0, y: 0, width: 0, height: 0, parentNodeOffsetLeft: 0, parentNodeOffsetTop: 0 });\r\n    const imgRef = useRef(null);\r\n    const imgWrapRef = useRef(null);\r\n\r\n    // Effect is used as a replacement for the constructor/componentWillUnmount in this case.\r\n    // I want an event listener to listen for window resizes so I can modify where the circle is\r\n    // But this ran when the component wasn't loaded, causing performance issues.\r\n    // The callback function removes all the listeners.\r\n    useEffect(() => {\r\n        let resize = () => {\r\n            if (imgRef.current) {\r\n                let { offsetLeft, offsetTop, width, height, parentNode } = imgRef.current;\r\n                let parentNodeOffsetLeft = parentNode.offsetLeft;\r\n                let parentNodeOffsetTop = parentNode.offsetTop;\r\n                setImgData({ x: offsetLeft, y: offsetTop, width, height, parentNodeOffsetLeft, parentNodeOffsetTop });\r\n            }\r\n        }\r\n        if ((imgRef.current && imgData.x === 0 && imgData.y === 0) || (imgData.width === 0 || imgData.height === 0) ||\r\n            (imgData.parentNodeOffsetLeft === 0 || imgData.parentNodeOffsetTop === 0)) {\r\n            let { offsetLeft, offsetTop, width, height, parentNode } = imgRef.current;\r\n            let parentNodeOffsetLeft = parentNode.offsetLeft;\r\n            let parentNodeOffsetTop = parentNode.offsetTop;\r\n            setImgData({ x: offsetLeft, y: offsetTop, width, height, parentNodeOffsetLeft, parentNodeOffsetTop });\r\n        }\r\n        window.addEventListener('resize', resize);\r\n        return () => {\r\n            window.removeEventListener('resize', resize);\r\n        }\r\n    });\r\n    // console.log(imgData);\r\n    // console.log(imgData.x + (locations[0] ? locations[0].xPercentage * imgData.width : 0), imgData.y + (locations[0] ? locations[0].yPercentage * imgData.height : 0))\r\n    return <div ref={imgWrapRef} style={{ position: 'relative', height: '60%' }}>\r\n        <img alt={\"TE Lab Map. Please see one of the tutors if you need any accessibility accommodations and tutoring.\"} ref={imgRef} src={TELabMap} style={{ maxHeight: '50vh', maxWidth: '90vw', cursor: 'pointer' }} onClick={(e) => {\r\n            if (student && setLocation) {\r\n                const { offsetLeft, offsetTop, width, height } = e.target\r\n                const parentNodeOffsetLeft = e.target.parentNode.offsetLeft;\r\n                const parentNodeOffsetTop = e.target.parentNode.offsetTop;\r\n                // console.log(parentNodeOffsetLeft, parentNodeOffsetTop)\r\n                const locationObj = {\r\n                    xPercentage: (e.pageX - offsetLeft - parentNodeOffsetLeft) / width,\r\n                    yPercentage: (e.pageY - offsetTop - parentNodeOffsetTop) / height\r\n                };\r\n                setImgData({ x: offsetLeft, y: offsetTop, width, height, parentNodeOffsetLeft, parentNodeOffsetTop });\r\n                setLocation(locationObj);\r\n            }\r\n        }} />\r\n        {locations && locations.map((d, i) => <div key={'loc-' + i} style={{\r\n            position: 'absolute',\r\n            left: imgData.x + (d ? d.xPercentage * imgData.width : 0),\r\n            top: imgData.y + (d ? d.yPercentage * imgData.height : 0),\r\n            transform: 'translate(-50%, -50%)',\r\n            display: d ? '' : 'none'\r\n        }}><FontAwesomeIcon icon={faCircle} size={'2x'} style={{ color: 'red' }} /></div>)}\r\n    </div>\r\n}","module.exports = __webpack_public_path__ + \"static/media/TELabMap.a1bfce1d.png\";","import React from 'react';\r\nimport { Grid, Row, Col } from 'react-flexbox-grid';\r\nimport { Button } from 'reactstrap';\r\nimport './TutorQButtons.css';\r\n\r\nexport default function TutorQButtons({ getPageNumber, prevStep, nextStep, totalPages }) {\r\n    return <div style={{\r\n        // position: 'absolute', left: 0, bottom: 30, \r\n        width: '100%',\r\n        margin: 'auto',\r\n        marginTop: 40,\r\n        textAlign: 'center',\r\n        zIndex: -5\r\n    }}>\r\n        <Grid fluid>\r\n            <Row>\r\n                <Col style={{ width: '50%' }}>\r\n                    <Button\r\n                        disabled={getPageNumber() < 1}\r\n                        style={{ backgroundColor: '#005696' }}\r\n                        onClick={prevStep}>{'< Back'}</Button>\r\n                </Col>\r\n                <Col style={{ width: '50%' }}>\r\n                    <Button\r\n                        disabled={getPageNumber() > totalPages - 2}\r\n                        style={{ backgroundColor: '#005696' }}\r\n                        onClick={nextStep}>{'Next >'}\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Grid>\r\n    </div>\r\n}","import React, { useState } from 'react';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport './TutorQDropdown.css';\r\n\r\nexport default function TutorQDropdown({ name, data, change, initText, value }) { //\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    let asdf = () => {\r\n        console.log('asdf')\r\n    }\r\n    return <Dropdown name={name}\r\n        isOpen={dropdownOpen}\r\n        toggle={() => { setDropdownOpen(!dropdownOpen) }}>\r\n        <DropdownToggle caret\r\n            style={{ zIndex: 500, backgroundColor: '#005696' }}>\r\n            {value ? value : initText}\r\n        </DropdownToggle>\r\n        <DropdownMenu onChange={asdf} style={{ zIndex: 500 }}>\r\n            {data.map(d => <DropdownItem key={d}\r\n                onClick={() => change({ target: { name, value: d } })}\r\n                style={{ cursor: 'pointer' }}>\r\n                {d}\r\n            </DropdownItem>)}\r\n        </DropdownMenu>\r\n    </Dropdown>\r\n}","import React, { Component } from 'react';\r\nimport cookies from 'browser-cookies';\r\nimport TutorQButtons from './Components/TutorQButtons/TutorQButtons';\r\nimport TutorQDropdown from './Components/TutorQDropdown/TutorQDropdown';\r\nimport Fade from 'react-reveal/Fade';\r\nimport StudentLocation from '../Components/StudentLocation/StudentLocation';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport 'firebase/functions';\r\nimport { Input, Button, Alert } from 'reactstrap';\r\nimport './TutorQStudent.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst removeUserFromQueue = firebase.functions().httpsCallable('removeUserFromQueue');\r\n\r\nexport default class TutorQStudent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            page: 0,\r\n            name: cookies.get('tutorqname') || '',\r\n            classNumber: cookies.get('tutorqclassnumber') ? Number(cookies.get('tutorqclassnumber')) : null,\r\n            problemCategory: null,\r\n            problemDescription: '',\r\n            location: null,\r\n            error: '',\r\n            valid: false,\r\n            queueLength: 0,\r\n            positionInQueue: -1,\r\n            inQueue: false,\r\n            userInQueueKey: '',\r\n            sentToFirebase: false\r\n        }\r\n\r\n        this.totalPages = 5;\r\n        this.classes = [201, 330, 340];\r\n        this.topics = {\r\n            201: ['Setup', 'Markdown', 'Git/web servers', 'R', 'dplyr', 'Web APIs', 'R Markdown', 'ggplot2', 'R Shiny', 'Other'],\r\n            330: ['ERDs and MetaData', 'Create table', 'Constraints', 'Inserting data', 'Views, Functions, Stored procedures', 'Permissions', 'Testing', 'Other'],\r\n            340: ['Setup', 'HTML', 'CSS Fundamentals', 'CSS Selectors', 'CSS Layouting', 'Responsive CSS', 'CSS Frameworks', 'Basic JavaScript', 'jQuery', 'DOM', 'AJAX/Fetch', 'React', 'Routing', 'Firebase', 'Testing', 'Other']\r\n        }\r\n\r\n        this.id = cookies.get('id');\r\n        // firebase.database().ref('/blogPageView').push({\r\n        //     timestamp: firebase.database.ServerValue.TIMESTAMP,\r\n        //     id,\r\n        //     post: this.props.post\r\n        // });\r\n    }\r\n\r\n    removeMeFromQueue = () => {\r\n        this.setState({ removeButtonLoading: true });\r\n        removeUserFromQueue({ id: this.id }).then((r) => {\r\n            this.setState({ removeButtonLoading: false, page: 0 });\r\n            if (!r.data.success) {\r\n                console.log(r.data);\r\n                this.setState({ error: r.data.error });\r\n            }\r\n        });\r\n    }\r\n\r\n    // {\r\n    //      id: 123,\r\n    //      body: \"abc123\"\r\n    // }\r\n\r\n    renderAnnouncements = (announcementsObj) => {\r\n        // if (cookies.get(\"\"))\r\n        let announcementsSeen = cookies.get(\"tutorqannouncementsseen\") ?\r\n            JSON.parse(cookies.get(\"tutorqannouncementsseen\")) : []\r\n        let announcements = { ...announcementsObj };\r\n        announcementsSeen.forEach(d => {\r\n            delete announcements[d];\r\n        })\r\n        let currDateTime = Date.now();\r\n        Object.keys(announcements).forEach(d => {\r\n            if ((currDateTime - announcements[d].timestamp) < (24 * 60 * 60 * 1000)) {\r\n                alert(announcements[d].body);\r\n            }\r\n            announcementsSeen.push(d);\r\n        });\r\n        cookies.set(\"tutorqannouncementsseen\", JSON.stringify(announcementsSeen));\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.idToQueueInfoRef = firebase.database().ref(`/tutorq/idToQueueInfo/${this.id}`);\r\n        this.idToQueueInfoRef.on('value', (snap) => {\r\n            let val = snap.val() || {};\r\n            let { queueKey } = val;\r\n            this.setState({ userInQueueKey: queueKey });\r\n        })\r\n\r\n        this.announcementRef = firebase.database().ref(`/tutorq/announcements`);\r\n        this.announcementRef.on('value', (snap) => {\r\n\r\n            let announcements = snap.val() || {};\r\n            let announcementsObj = {};\r\n            Object.keys(announcements).forEach(d => {\r\n                //  { [announcements[d].id]: announcements[d] } \r\n                announcementsObj[announcements[d].id] = announcements[d]\r\n            });\r\n            this.renderAnnouncements(announcementsObj)\r\n        })\r\n\r\n        this.queueRef = firebase.database().ref('/tutorq/inqueue')\r\n\r\n        this.queueRef.on('value', (snap) => {\r\n            let queue = snap.val() || {};\r\n            let queueArr = Object.keys(queue).sort((a, b) => {\r\n                return queue[a].timestamp - queue[b].timestamp;\r\n            });\r\n            let userInQueue = queueArr.indexOf(this.state.userInQueueKey);\r\n            if (userInQueue > -1) {\r\n                this.setState({\r\n                    inQueue: true,\r\n                    queueLength: queueArr.length,\r\n                    positionInQueue: userInQueue + 1,\r\n                    sentToFirebase: false,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    inQueue: false,\r\n                    queueLength: queueArr.length,\r\n                    positionInQueue: -1\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.queueRef.off();\r\n        this.idToQueueInfoRef.off();\r\n        this.announcementRef.off();\r\n    }\r\n\r\n    change = (e) => {\r\n        let { name, value } = e.target;\r\n        if (name === \"classNumber\" && value !== this.state.classNumber) {\r\n            this.setState({\r\n                [name]: value,\r\n                problemCategory: null,\r\n                problemDescription: ''\r\n            });\r\n        } else {\r\n            this.setState({ [name]: value });\r\n        }\r\n    }\r\n\r\n    getPageNumber = () => {\r\n        return this.state.page;\r\n    }\r\n\r\n    nextStep = () => {\r\n        let page = this.state.page + 1;\r\n        if (page > this.totalPages - 1) {\r\n            page = this.totalPages;\r\n        }\r\n        this.setState({ page });\r\n        if (page === this.totalPages - 1) {\r\n            this.checkValidityBeforeSendingToFirebase();\r\n        }\r\n    }\r\n\r\n    prevStep = () => {\r\n        let page = this.state.page - 1;\r\n        if (page < 0) {\r\n            page = 0;\r\n        }\r\n        this.setState({ page });\r\n    }\r\n\r\n    setError(error) {\r\n        this.setState({ error });\r\n    }\r\n\r\n    /**\r\n     * @param {object} location has fields {xPercentage, yPercentage}\r\n     */\r\n    setLocation = (location) => {\r\n        this.setState({ location });\r\n    }\r\n\r\n    setValid = (valid) => {\r\n        this.setState({ valid });\r\n    }\r\n\r\n    checkValidityBeforeSendingToFirebase() {\r\n        if (this.state.name === '') {\r\n            this.setError(\"Please provide a valid name\");\r\n            this.setValid(false);\r\n            return false;\r\n        }\r\n\r\n        if (this.state.classNumber === null) {\r\n            this.setError(\"Invalid class number provided\");\r\n            this.setValid(false);\r\n            return false;\r\n        }\r\n\r\n        if (this.state.problemCategory === null) {\r\n            this.setError(\"Please choose a problem category\");\r\n            this.setValid(false);\r\n            return false;\r\n        }\r\n\r\n        if (this.state.problemDescription === '') {\r\n            this.setError(\"Please provide a description of the problem\");\r\n            this.setValid(false);\r\n            return false;\r\n        }\r\n\r\n        if (this.state.location === null) {\r\n            this.setError(\"Please provide your location in the TE lab\");\r\n            this.setValid(false);\r\n            return false;\r\n        }\r\n        this.setError('');\r\n        this.setValid(true);\r\n        // this.setState({ page: 0 });\r\n        return true;\r\n    }\r\n\r\n    sendDataToFirebase = () => {\r\n        if (this.checkValidityBeforeSendingToFirebase()) {\r\n            let { name, classNumber, problemCategory, problemDescription, location } = this.state;\r\n            // console.log(classNumber);\r\n            cookies.set('tutorqname', name);\r\n            cookies.set('tutorqclassnumber', classNumber.toString());\r\n            let queueKey = this.queueRef.push({\r\n                classNumber,\r\n                problemCategory,\r\n                problemDescription,\r\n                location,\r\n                timestamp: firebase.database.ServerValue.TIMESTAMP,\r\n            }, (e) => {\r\n                if (e) {\r\n                    this.setError(e.message);\r\n                }\r\n            }).key;\r\n\r\n            if (queueKey) {\r\n                firebase.database().ref(`/tutorq/idToQueueInfo/${this.id}`).set({ name, queueKey });\r\n            }\r\n        }\r\n\r\n        // TODO: set a loading spinner!\r\n    }\r\n\r\n    render() {\r\n        let { name,\r\n            classNumber,\r\n            page,\r\n            problemCategory,\r\n            problemDescription,\r\n            location,\r\n            error,\r\n            valid,\r\n            positionInQueue,\r\n            queueLength } = this.state;\r\n        let locations = [];\r\n        locations.push(location);\r\n        return <>\r\n            <h1 style={{ margin: 'auto', textAlign: 'center' }}>TutorQ</h1>\r\n\r\n\r\n            {this.state.inQueue && <>\r\n                <div style={{ marginTop: '10vh', textAlign: 'center' }}>\r\n                    <h3 style={{ fontWeight: 'bold' }}>You are currently in queue at position: <span style={{ color: 'green', fontWeight: 'bold' }}>\r\n                        {positionInQueue}/{queueLength}\r\n                    </span>\r\n                    </h3>\r\n                    <div style={{ fontSize: '150%' }}>\r\n                        <p>Please be patient, a tutor will assist you shortly.</p>\r\n                        <p>In the meantime, please check out the <Link to=\"/blog/infotutor-home\">Tutor Hub</Link>. Don't worry, your place in line will be saved!</p>\r\n                        <p>If you would like to remove yourself from the queue, please click the button below:\r\n                        </p>\r\n                        <Button style={{ backgroundColor: '#005696' }}\r\n                            onClick={this.removeMeFromQueue}\r\n                            disabled={this.state.removeButtonLoading}\r\n                        >Remove me from queue</Button>\r\n                    </div>\r\n                </div>\r\n            </>}\r\n\r\n            {!this.state.inQueue &&\r\n                <>\r\n                    <div style={{ textAlign: 'center' }}>Page {page + 1}/{this.totalPages}</div>\r\n                    <div style={{ marginTop: '10vh', textAlign: 'center' }}>\r\n                        {page === 0 && <Fade>\r\n                            <>\r\n                                <h3>Welcome to TutorQ!</h3>\r\n                                <p>This is an application used for the INFO tutor. Please have cookies enabled or the application will not function properly.\r\n                                    Your data will be collected. See how it is being used <Link to=\"/blog/tutordata\">here</Link>.</p>\r\n                                <h3>Please enter your name</h3>\r\n                                <Input placeholder={'Name'}\r\n                                    name={'name'}\r\n                                    onChange={this.change}\r\n                                    value={name}\r\n                                    style={{ maxWidth: 500, margin: 'auto', marginTop: 10 }} />\r\n                            </>\r\n                        </Fade>}\r\n                        {page === 1 && <Fade>\r\n                            <>\r\n                                <h3>Please select your class</h3>\r\n                                <TutorQDropdown change={this.change}\r\n                                    name={\"classNumber\"}\r\n                                    data={this.classes}\r\n                                    initText={\"Choose a class\"}\r\n                                    value={classNumber} />\r\n                            </>\r\n                        </Fade>}\r\n                        {page === 2 && <Fade>\r\n                            {classNumber\r\n                                ?\r\n                                <>\r\n                                    <h3>Please select a topic</h3>\r\n                                    <TutorQDropdown change={this.change}\r\n                                        name={\"problemCategory\"}\r\n                                        data={this.topics[classNumber]}\r\n                                        initText={\"Choose a topic\"}\r\n                                        value={problemCategory} />\r\n                                    <h3 style={{ marginTop: 15 }}>Please describe your problem</h3>\r\n                                    <Input placeholder={'Problem'}\r\n                                        name={'problemDescription'}\r\n                                        onChange={this.change}\r\n                                        value={problemDescription}\r\n                                        style={{ maxWidth: 500, margin: 'auto', marginTop: 30 }} />\r\n                                </>\r\n                                :\r\n                                <h3>Please select a class on the previous page</h3>}\r\n                        </Fade>}\r\n                        {page === 3 &&\r\n                            <>\r\n                                <h3>Where in the TE Lab are you sitting?</h3>\r\n                                <div>\r\n                                    <StudentLocation student setLocation={this.setLocation} locations={locations} test=\"123\" />\r\n                                </div>\r\n                            </>}\r\n                        {page === 4 && <Fade>\r\n                            <>\r\n                                <h3>Submit</h3>\r\n\r\n                                {error !== '' && <Alert color={\"danger\"}>{error}</Alert>}\r\n\r\n                                <Button\r\n                                    style={{ backgroundColor: '#005696' }}\r\n                                    disabled={!valid}\r\n                                    onClick={this.sendDataToFirebase}\r\n                                >\r\n                                    Join the queue!\r\n                                </Button>\r\n\r\n                                <p style={{ marginTop: 15 }}>By clicking this button, you acknowledge that your data is collected. See how your data is being used <Link to=\"/blog/tutordata\">here</Link></p>\r\n\r\n                            </>\r\n                        </Fade>}\r\n                    </div>\r\n                    {/** Previous and next button */}\r\n                    <TutorQButtons getPageNumber={this.getPageNumber}\r\n                        prevStep={this.prevStep}\r\n                        nextStep={this.nextStep}\r\n                        totalPages={this.totalPages} />\r\n                </>}\r\n        </>\r\n    }\r\n}\r\n\r\n        // tutorq\r\n        //     inprogress\r\n        //     helped\r\n//     inqueue // remove from queue when in progress"],"sourceRoot":""}